"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[975],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},599:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),i=["components"],l={title:"Introduction",slug:"/counter"},u="A Counter on an NCTL Network",c={unversionedId:"dapp-dev-guide/tutorials/counter/index",id:"dapp-dev-guide/tutorials/counter/index",title:"Introduction",description:"This tutorial installs a simple counter contract on a local Casper Network with NCTL. The contract is straightforward and simply maintains a counter variable. If you want to learn to send deploys to the Testnet, you can follow a similar tutorial. Once you are familiar with this process, the next step will be to write more practical smart contracts.",source:"@site/source/docs/casper/dapp-dev-guide/tutorials/counter/index.md",sourceDirName:"dapp-dev-guide/tutorials/counter",slug:"/counter",permalink:"/counter",editUrl:"https://github.com/casper-network/docs/tree/main/source/docs/casper/dapp-dev-guide/tutorials/counter/index.md",tags:[],version:"current",lastUpdatedAt:1674814466,formattedLastUpdatedAt:"1/27/2023",frontMatter:{title:"Introduction",slug:"/counter"},sidebar:"dapp-dev-guide",previous:{title:"Getting Started Video",permalink:"/dapp-dev-guide/tutorials/getting-started-tutorial"},next:{title:"Overview",permalink:"/dapp-dev-guide/tutorials/counter/overview"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2}],d={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"a-counter-on-an-nctl-network"},"A Counter on an NCTL Network"),(0,o.kt)("p",null,"This tutorial installs a simple counter contract on a local Casper Network with NCTL. The contract is straightforward and simply maintains a counter variable. If you want to learn to send deploys to the Testnet, you can follow a ",(0,o.kt)("a",{parentName:"p",href:"/counter-testnet"},"similar tutorial"),". Once you are familiar with this process, the next step will be to write more practical smart contracts."),(0,o.kt)("p",null,"Before we go through the tutorial, we will give a high-level overview of this tutorial's walkthrough and briefly summarize the relevant commands (and respective arguments)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dapp-dev-guide/tutorials/counter/overview"},"Tutorial Overview")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dapp-dev-guide/tutorials/counter/commands"},"Important Commands")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/dapp-dev-guide/tutorials/counter/walkthrough"},"Tutorial Walkthrough"))),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"You have completed the ",(0,o.kt)("a",{parentName:"li",href:"/dapp-dev-guide/writing-contracts/getting-started"},"Getting Started tutorial")," to set up your development environment, including tools like ",(0,o.kt)("em",{parentName:"li"},"cmake")," (version 3.1.4+), ",(0,o.kt)("em",{parentName:"li"},"cargo"),", and ",(0,o.kt)("em",{parentName:"li"},"Rust"),"."),(0,o.kt)("li",{parentName:"ol"},"You have completed the ",(0,o.kt)("a",{parentName:"li",href:"/dapp-dev-guide/building-dapps/setup-nctl"},"NCTL tutorial"),", which introduces you to the CLI tool to set up and control local Casper networks for development."),(0,o.kt)("li",{parentName:"ol"},"Follow the installation instructions for the ",(0,o.kt)("a",{parentName:"li",href:"/dapp-dev-guide/setup/#the-casper-command-line-client"},"Casper client"),". We will use the ",(0,o.kt)("em",{parentName:"li"},"casper-client")," to send deploys to the chain.")))}m.isMDXComponent=!0}}]);