"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"workflow":[{"type":"link","label":"How To\'s","href":"/workflow/","docId":"workflow/index"},{"type":"category","label":"User How To\'s","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Table of Contents","href":"/workflow/users/","docId":"workflow/users/index"},{"type":"link","label":"Block Explorers on Casper Network","href":"/workflow/users/block-explorer","docId":"workflow/users/block-explorer"},{"type":"link","label":"Delegating Tokens with a Block Explorer","href":"/workflow/users/delegate-ui","docId":"workflow/users/delegate-ui"},{"type":"link","label":"Undelegating with a Block Explorer","href":"/workflow/users/undelegate-ui","docId":"workflow/users/undelegate-ui"},{"type":"link","label":"Ledger Setup","href":"/workflow/users/ledger-setup","docId":"workflow/users/ledger-setup"},{"type":"link","label":"Transferring Tokens using a Block Explorer","href":"/workflow/users/token-transfer","docId":"workflow/users/token-transfer"},{"type":"link","label":"Funding Mainnet Accounts from an Exchange","href":"/workflow/users/funding-from-exchanges","docId":"workflow/users/funding-from-exchanges"},{"type":"link","label":"Funding Testnet Accounts","href":"/workflow/users/testnet-faucet","docId":"workflow/users/testnet-faucet"}]},{"type":"category","label":"Operator How To\'s","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Table of Contents","href":"/workflow/operators/","docId":"workflow/operators/index"},{"type":"link","label":"Set Up a Private Casper Network","href":"/workflow/operators/setup-private-network","docId":"workflow/operators/setup-private-network"},{"type":"link","label":"Staging Files for a New Network","href":"/workflow/operators/staging-files-for-new-network","docId":"workflow/operators/staging-files-for-new-network"}]},{"type":"category","label":"Developer How To\'s","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Table of Contents","href":"/workflow/developers/","docId":"workflow/developers/index"},{"type":"link","label":"Querying a Casper Network","href":"/workflow/developers/querying","docId":"workflow/developers/querying"},{"type":"link","label":"Two-Party Multi-Signature Deploys","href":"/workflow/developers/two-party-multi-sig","docId":"workflow/developers/two-party-multi-sig"},{"type":"category","label":"Transferring Tokens","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/workflow/developers/transfers","docId":"workflow/developers/transfers"},{"type":"link","label":"Direct Token Transfer","href":"/workflow/developers/transfer-workflow","docId":"workflow/developers/transfer-workflow"},{"type":"link","label":"Transferring Tokens using a Multi-sig Deploy","href":"/workflow/developers/deploy-transfer","docId":"workflow/developers/deploy-transfer"},{"type":"link","label":"Verifying a Transfer","href":"/workflow/developers/verify-transfer","docId":"workflow/developers/verify-transfer"}]},{"type":"link","label":"Delegating with the Casper Client","href":"/workflow/developers/delegate","docId":"workflow/developers/delegate"},{"type":"link","label":"Undelegating Tokens with the Casper Client","href":"/workflow/developers/undelegate","docId":"workflow/developers/undelegate"}]}],"dapp-dev-guide":[{"type":"link","label":"Overview","href":"/dapp-dev-guide","docId":"dapp-dev-guide/index"},{"type":"link","label":"Quickstart","href":"/dapp-dev-guide/quickstart","docId":"dapp-dev-guide/quickstart"},{"type":"category","label":"Why Build on Casper","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/dapp-dev-guide/build-on-casper/introduction","docId":"dapp-dev-guide/build-on-casper/index"},{"type":"link","label":"Ecosystem Open-Source Software","href":"/dapp-dev-guide/build-on-casper/casper-open-source-software","docId":"dapp-dev-guide/build-on-casper/casper-open-source-software"}]},{"type":"link","label":"Accounts and Cryptographic Keys","href":"/dapp-dev-guide/keys","docId":"dapp-dev-guide/keys"},{"type":"link","label":"Understanding Hash Types","href":"/dapp-dev-guide/understanding-hash-types","docId":"dapp-dev-guide/understanding-hash-types"},{"type":"link","label":"Interacting with the Casper JSON-RPC API","href":"/dapp-dev-guide/json-rpc","docId":"dapp-dev-guide/json-rpc"},{"type":"category","label":"Casper SDK Standard","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/dapp-dev-guide/sdkspec/introduction","docId":"dapp-dev-guide/sdkspec/introduction"},{"type":"link","label":"Guidance for JSON-RPC SDK Compliance","href":"/dapp-dev-guide/sdkspec/guidance","docId":"dapp-dev-guide/sdkspec/guidance"},{"type":"link","label":"Required Methods for Minimal Compliance","href":"/dapp-dev-guide/sdkspec/json-rpc-minimal","docId":"dapp-dev-guide/sdkspec/json-rpc-minimal"},{"type":"link","label":"Transactional JSON-RPC Method","href":"/dapp-dev-guide/sdkspec/json-rpc-transactional","docId":"dapp-dev-guide/sdkspec/json-rpc-transactional"},{"type":"link","label":"Informational JSON-RPC Methods","href":"/dapp-dev-guide/sdkspec/json-rpc-informational","docId":"dapp-dev-guide/sdkspec/json-rpc-informational"},{"type":"link","label":"Proof of Stake JSON-RPC Methods","href":"/dapp-dev-guide/sdkspec/json-rpc-pos","docId":"dapp-dev-guide/sdkspec/json-rpc-pos"},{"type":"link","label":"Types","href":"/dapp-dev-guide/sdkspec/types_chain","docId":"dapp-dev-guide/sdkspec/types_chain"},{"type":"link","label":"CLType","href":"/dapp-dev-guide/sdkspec/types_cl","docId":"dapp-dev-guide/sdkspec/types_cl"}]},{"type":"link","label":"Listing CSPR on Your Exchange","href":"/dapp-dev-guide/list-cspr","docId":"dapp-dev-guide/list-cspr"},{"type":"link","label":"Development Prerequisites","href":"/dapp-dev-guide/setup","docId":"dapp-dev-guide/setup"},{"type":"category","label":"Building dApps","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is a dApp?","href":"/dapp-dev-guide/building-dapps/dapp","docId":"dapp-dev-guide/building-dapps/dapp"},{"type":"link","label":"Signing Deploys","href":"/dapp-dev-guide/building-dapps/signing-a-deploy","docId":"dapp-dev-guide/building-dapps/signing-a-deploy"},{"type":"link","label":"Sending Deploys to a Casper network using the Rust Client","href":"/dapp-dev-guide/building-dapps/sending-deploys","docId":"dapp-dev-guide/building-dapps/sending-deploys"},{"type":"link","label":"Calling Contracts","href":"/dapp-dev-guide/building-dapps/calling-contracts","docId":"dapp-dev-guide/building-dapps/calling-contracts"},{"type":"link","label":"Understanding Call Stacks","href":"/dapp-dev-guide/building-dapps/callstack","docId":"dapp-dev-guide/building-dapps/callstack"},{"type":"category","label":"SDK Client Libraries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SDK Client Libraries","href":"/sdk","docId":"dapp-dev-guide/building-dapps/sdk/index"},{"type":"link","label":"JavaScript/TypeScript SDK","href":"/dapp-dev-guide/building-dapps/sdk/script-sdk","docId":"dapp-dev-guide/building-dapps/sdk/script-sdk"},{"type":"link","label":".NET SDK","href":"/dapp-dev-guide/building-dapps/sdk/csharp-sdk","docId":"dapp-dev-guide/building-dapps/sdk/csharp-sdk"},{"type":"link","label":"Golang SDK","href":"/dapp-dev-guide/building-dapps/sdk/go-sdk","docId":"dapp-dev-guide/building-dapps/sdk/go-sdk"},{"type":"link","label":"Python SDK","href":"/dapp-dev-guide/building-dapps/sdk/python-sdk","docId":"dapp-dev-guide/building-dapps/sdk/python-sdk"}]},{"type":"link","label":"Setting up a Local Network with NCTL","href":"/dapp-dev-guide/building-dapps/setup-nctl","docId":"dapp-dev-guide/building-dapps/setup-nctl"},{"type":"link","label":"Testing Smart Contracts with NCTL","href":"/dapp-dev-guide/building-dapps/nctl-test","docId":"dapp-dev-guide/building-dapps/nctl-test"},{"type":"link","label":"Monitoring and Consuming Events","href":"/dapp-dev-guide/building-dapps/monitoring-events","docId":"dapp-dev-guide/building-dapps/monitoring-events"},{"type":"link","label":"Using the JavaScript SDK","href":"/dapp-dev-guide/building-dapps/casper-signer","docId":"dapp-dev-guide/building-dapps/casper-signer"}]},{"type":"category","label":"Writing On-Chain Code","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/writing-contracts","docId":"dapp-dev-guide/writing-contracts/index"},{"type":"link","label":"Getting Started with Rust","href":"/dapp-dev-guide/writing-contracts/getting-started","docId":"dapp-dev-guide/writing-contracts/getting-started"},{"type":"link","label":"Best Practices for Casper Smart Contract Authors","href":"/dapp-dev-guide/writing-contracts/best-practices","docId":"dapp-dev-guide/writing-contracts/best-practices"},{"type":"link","label":"Writing a Basic Smart Contract in Rust","href":"/dapp-dev-guide/writing-contracts/rust-contracts","docId":"dapp-dev-guide/writing-contracts/rust-contracts"},{"type":"link","label":"Testing Smart Contracts","href":"/dapp-dev-guide/writing-contracts/testing-contracts","docId":"dapp-dev-guide/writing-contracts/testing-contracts"},{"type":"link","label":"Contracts and Session Code","href":"/dapp-dev-guide/writing-contracts/contract-vs-session","docId":"dapp-dev-guide/writing-contracts/contract-vs-session"},{"type":"link","label":"Writing Session Code","href":"/dapp-dev-guide/writing-contracts/session-code","docId":"dapp-dev-guide/writing-contracts/session-code"},{"type":"link","label":"Testing Session Code","href":"/dapp-dev-guide/writing-contracts/testing-session-code","docId":"dapp-dev-guide/writing-contracts/testing-session-code"},{"type":"link","label":"Installing Smart Contracts and Querying Global State","href":"/dapp-dev-guide/writing-contracts/installing-contracts","docId":"dapp-dev-guide/writing-contracts/installing-contracts"},{"type":"link","label":"Calling Smart Contracts with the Rust Client","href":"/dapp-dev-guide/writing-contracts/calling-contracts","docId":"dapp-dev-guide/writing-contracts/calling-contracts"},{"type":"link","label":"Upgrading and Maintaining Smart Contracts","href":"/dapp-dev-guide/writing-contracts/upgrading-contracts","docId":"dapp-dev-guide/writing-contracts/upgrading-contracts"},{"type":"link","label":"Reading and Writing to Dictionaries","href":"/dapp-dev-guide/writing-contracts/dictionaries","docId":"dapp-dev-guide/writing-contracts/dictionaries"},{"type":"link","label":"Execution Error Codes","href":"/dapp-dev-guide/writing-contracts/execution-error-codes","docId":"dapp-dev-guide/writing-contracts/execution-error-codes"},{"type":"link","label":"Getting Started with AssemblyScript","href":"/dapp-dev-guide/writing-contracts/assembly-script","docId":"dapp-dev-guide/writing-contracts/assembly-script"}]},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/tutorials","docId":"dapp-dev-guide/tutorials/index"},{"type":"link","label":"Getting Started Video","href":"/dapp-dev-guide/tutorials/getting-started-tutorial","docId":"dapp-dev-guide/tutorials/getting-started-tutorial"},{"type":"category","label":"A Counter on an NCTL Network","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/counter","docId":"dapp-dev-guide/tutorials/counter/index"},{"type":"link","label":"Overview","href":"/dapp-dev-guide/tutorials/counter/overview","docId":"dapp-dev-guide/tutorials/counter/overview"},{"type":"link","label":"Important Commands","href":"/dapp-dev-guide/tutorials/counter/commands","docId":"dapp-dev-guide/tutorials/counter/commands"},{"type":"link","label":"Tutorial Walkthrough","href":"/dapp-dev-guide/tutorials/counter/walkthrough","docId":"dapp-dev-guide/tutorials/counter/walkthrough"}]},{"type":"category","label":"A Counter on the Testnet","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/counter-testnet","docId":"dapp-dev-guide/tutorials/counter-testnet/index"},{"type":"link","label":"Overview","href":"/dapp-dev-guide/tutorials/counter-testnet/overview","docId":"dapp-dev-guide/tutorials/counter-testnet/overview"},{"type":"link","label":"Important Commands","href":"/dapp-dev-guide/tutorials/counter-testnet/commands","docId":"dapp-dev-guide/tutorials/counter-testnet/commands"},{"type":"link","label":"Tutorial Walkthrough","href":"/dapp-dev-guide/tutorials/counter-testnet/walkthrough","docId":"dapp-dev-guide/tutorials/counter-testnet/walkthrough"}]},{"type":"link","label":"Interacting with Runtime Return Values","href":"/dapp-dev-guide/tutorials/return-values-tutorial","docId":"dapp-dev-guide/tutorials/return-values-tutorial"},{"type":"link","label":"Upgrading a Contract","href":"/dapp-dev-guide/tutorials/upgrade-contract","docId":"dapp-dev-guide/tutorials/upgrade-contract"},{"type":"link","label":"Safely Transfer Tokens to a Contract","href":"/dapp-dev-guide/tutorials/transfer-token-to-contract","docId":"dapp-dev-guide/tutorials/transfer-token-to-contract"}]}],"operators":[{"type":"link","label":"Introduction","href":"/operators","docId":"operators/index"},{"type":"link","label":"Recommended Hardware Specifications","href":"/operators/hardware","docId":"operators/hardware"},{"type":"link","label":"Basic Node Configuration","href":"/operators/setup","docId":"operators/setup"},{"type":"link","label":"Setting up a Network","href":"/operators/create","docId":"operators/create"},{"type":"link","label":"Installing a Node","href":"/operators/install-node","docId":"operators/install-node"},{"type":"link","label":"Upgrading the Node","href":"/operators/upgrade","docId":"operators/upgrade"},{"type":"link","label":"Joining a Running Network","href":"/operators/joining","docId":"operators/joining"},{"type":"link","label":"Bonding as a Validator","href":"/operators/bonding","docId":"operators/bonding"},{"type":"link","label":"Unbonding as a Validator","href":"/operators/unbonding","docId":"operators/unbonding"}],"design":[{"type":"link","label":"Introduction","href":"/design","docId":"design/index"},{"type":"link","label":"Network Communication","href":"/design/p2p","docId":"design/p2p"},{"type":"link","label":"The Highway Consensus Protocol","href":"/design/highway","docId":"design/highway"},{"type":"link","label":"Overview of a Casper Network","href":"/design/casper-design","docId":"design/casper-design"},{"type":"link","label":"Reading and Writing Data to the Blockchain","href":"/design/reading-and-writing-to-the-blockchain","docId":"design/reading-and-writing-to-the-blockchain"},{"type":"link","label":"Serialization Standard","href":"/design/serialization-standard","docId":"design/serialization-standard"}],"economics":[{"type":"link","label":"Overview","href":"/economics","docId":"economics/index"},{"type":"link","label":"Consensus Economics","href":"/economics/consensus","docId":"economics/consensus"},{"type":"category","label":"Runtime Economics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/runtime","docId":"economics/runtime"},{"type":"link","label":"Gas and the Casper Blockchain","href":"/economics/gas-concepts","docId":"economics/gas-concepts"}]},{"type":"link","label":"Delegation Details","href":"/economics/delegation","docId":"economics/delegation"},{"type":"link","label":"Staking Concepts","href":"/economics/concepts","docId":"economics/concepts"}],"faq":[{"type":"link","label":"Frequently Asked Questions (FAQ)","href":"/faq","docId":"faq/index"},{"type":"link","label":"FAQ - General","href":"/faq/faq-general","docId":"faq/faq-general"},{"type":"link","label":"FAQ - Enterprise","href":"/faq/faq-enterpise","docId":"faq/faq-enterpise"},{"type":"link","label":"FAQ - Developers","href":"/faq/faq-developer","docId":"faq/faq-developer"},{"type":"link","label":"FAQ - Validators","href":"/faq/faq-validator","docId":"faq/faq-validator"}],"glossary":[{"type":"link","label":"Appendix","href":"/glossary","docId":"glossary/index"},{"type":"link","label":"A","href":"/glossary/A","docId":"glossary/A"},{"type":"link","label":"B","href":"/glossary/B","docId":"glossary/B"},{"type":"link","label":"C","href":"/glossary/C","docId":"glossary/C"},{"type":"link","label":"D","href":"/glossary/D","docId":"glossary/D"},{"type":"link","label":"E","href":"/glossary/E","docId":"glossary/E"},{"type":"link","label":"F","href":"/glossary/F","docId":"glossary/F"},{"type":"link","label":"G","href":"/glossary/G","docId":"glossary/G"},{"type":"link","label":"H","href":"/glossary/H","docId":"glossary/H"},{"type":"link","label":"I","href":"/glossary/I","docId":"glossary/I"},{"type":"link","label":"J","href":"/glossary/J","docId":"glossary/J"},{"type":"link","label":"K","href":"/glossary/K","docId":"glossary/K"},{"type":"link","label":"L","href":"/glossary/L","docId":"glossary/L"},{"type":"link","label":"M","href":"/glossary/M","docId":"glossary/M"},{"type":"link","label":"N","href":"/glossary/N","docId":"glossary/N"},{"type":"link","label":"O","href":"/glossary/O","docId":"glossary/O"},{"type":"link","label":"P","href":"/glossary/P","docId":"glossary/P"},{"type":"link","label":"Q","href":"/glossary/Q","docId":"glossary/Q"},{"type":"link","label":"R","href":"/glossary/R","docId":"glossary/R"},{"type":"link","label":"S","href":"/glossary/S","docId":"glossary/S"},{"type":"link","label":"T","href":"/glossary/T","docId":"glossary/T"},{"type":"link","label":"U","href":"/glossary/U","docId":"glossary/U"},{"type":"link","label":"V","href":"/glossary/V","docId":"glossary/V"},{"type":"link","label":"W","href":"/glossary/W","docId":"glossary/W"},{"type":"link","label":"X","href":"/glossary/X","docId":"glossary/X"},{"type":"link","label":"Y","href":"/glossary/Y","docId":"glossary/Y"},{"type":"link","label":"Z","href":"/glossary/Z","docId":"glossary/Z"}],"staking":[{"type":"link","label":"Overview","href":"/staking","docId":"staking/index"}]},"docs":{"dapp-dev-guide/build-on-casper/casper-open-source-software":{"id":"dapp-dev-guide/build-on-casper/casper-open-source-software","title":"Ecosystem Open-Source Software","description":"This page lists open-source software available within the Casper ecosystem. Developers and the community may use the listed software as a basis for new projects and solutions.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/build-on-casper/index":{"id":"dapp-dev-guide/build-on-casper/index","title":"Introduction","description":"This guide intends to briefly show you the current features and advantages of building on the Casper Mainnet.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/calling-contracts":{"id":"dapp-dev-guide/building-dapps/calling-contracts","title":"Calling Contracts","description":"Calling a contract on a Casper network requires the use of a deploy. When using the Casper Rust client, JavaScript SDK, or any other client, the intermediary client crafts the deploy for you, using the arguments you provide. This document outlines the various deploy variants through which you can execute Wasm or invoke the execution of on-chain Wasm.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/callstack":{"id":"dapp-dev-guide/building-dapps/callstack","title":"Understanding Call Stacks","description":"Users wishing to interact with a Casper network must do so through sending a Deploy. All Deploys consist of session code run in the context of the user account that sent the Deploy. The session code may install contract code to global state, or interact with previously installed contract code.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/casper-signer":{"id":"dapp-dev-guide/building-dapps/casper-signer","title":"Using the JavaScript SDK","description":"This tutorial shows you how to use the JavaScript SDK by connecting the Casper Signer to a website, get the balance of an account\'s main purse and send a Deploy.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/dapp":{"id":"dapp-dev-guide/building-dapps/dapp","title":"What is a dApp?","description":"A decentralized application (dApp) is an application with some data on a blockchain or similar peer-to-peer network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/monitoring-events":{"id":"dapp-dev-guide/building-dapps/monitoring-events","title":"Monitoring and Consuming Events","description":"Casper platform uses event streaming to notify state changes in smart contracts and nodes. A node on a Casper network streams events through the SSE (Server Sent Event) server. The default configuration of the Casper node provides event streaming via the port specified as the eventstreamserver.address in the node\'s config.toml, which is by default 9999 for nodes on Testnet and Mainnet.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/nctl-test":{"id":"dapp-dev-guide/building-dapps/nctl-test","title":"Testing Smart Contracts with NCTL","description":"NCTL effectively simulates a live Casper network. The process for sending a Deploy to an NCTL-based network is therefore similar to doing so on a live network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/sdk/csharp-sdk":{"id":"dapp-dev-guide/building-dapps/sdk/csharp-sdk","title":".NET SDK","description":"The C# .NET SDK allows developers to interact with a Casper network using C#.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/sdk/go-sdk":{"id":"dapp-dev-guide/building-dapps/sdk/go-sdk","title":"Golang SDK","description":"Usage Examples","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/sdk/index":{"id":"dapp-dev-guide/building-dapps/sdk/index","title":"SDK Client Libraries","description":"This section covers the software development kits (SDKs) published by third parties available for interacting with the Casper blockchain. These SDKs are client-side libraries providing functions or methods (depending on the language) to interact with a Casper network. You can use them as a model to develop your application and accomplish tasks such as generating account keys, sending transfers, or other blockchain transactions.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/sdk/python-sdk":{"id":"dapp-dev-guide/building-dapps/sdk/python-sdk","title":"Python SDK","description":"The Python SDK allows developers to interact with the Casper Node using Python 3.9+. This page covers various examples of using this SDK.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/sdk/script-sdk":{"id":"dapp-dev-guide/building-dapps/sdk/script-sdk","title":"JavaScript/TypeScript SDK","description":"This page contains details related to a few JavaScript (JS) clients and the Casper JS SDK.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/sending-deploys":{"id":"dapp-dev-guide/building-dapps/sending-deploys","title":"Sending Deploys to a Casper network using the Rust Client","description":"Ultimately, smart contracts are meant to run on the blockchain. You can send your contract to the network via a Deploy. To do this, you will need to meet a few prerequisites:","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/setup-nctl":{"id":"dapp-dev-guide/building-dapps/setup-nctl","title":"Setting up a Local Network with NCTL","description":"NCTL stands for network/node control. NCTL is a CLI application you can use to set up and control multiple local Casper nodes during development. Many developers wish to spin up relatively small test networks to localize their testing before deploying to the blockchain. Adopting a standardized approach in the community is also helpful for troubleshooting and reporting issues.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/building-dapps/signing-a-deploy":{"id":"dapp-dev-guide/building-dapps/signing-a-deploy","title":"Signing Deploys","description":"When creating a Deploy to be executed on a Casper network, the account owner, or more accurately, enough authorized signers must sign the deploy using their account\'s cryptographic key-pair. This key-pair is a combination of the account\'s secret and public keys. The signatures attached to the Deploy allow the network to verify that it should be executed.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/index":{"id":"dapp-dev-guide/index","title":"Overview","description":"This guide is designed to support developers getting started with the development of smart contracts on the Casper blockchain in AssemblyScript or Rust. For Rust, there is a contract development kit that includes a runtime environment, reference documentation, and test framework. You can install our environment locally, create and test Smart Contracts with our Smart Contracts and Test Libraries, and use these libraries to build your own applications.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/json-rpc":{"id":"dapp-dev-guide/json-rpc","title":"Interacting with the Casper JSON-RPC API","description":"Users looking to interact with the JSON-RPC API of a Casper network have several options, depending on their needs and the level of interaction required.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/keys":{"id":"dapp-dev-guide/keys","title":"Accounts and Cryptographic Keys","description":"The Casper blockchain uses an on-chain account-based model, uniquely identified by an AccountHash derived from a specific PublicKey. The AccountHash is a 32-byte hash derived from any of the supported PublicKey variants below to standardize keys that can vary in length.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/list-auth-keys":{"id":"dapp-dev-guide/list-auth-keys","title":"Listing Authorization Keys","description":"This topic explains the difference between associated keys and authorization keys, and how to access authorization keys from a smart contract."},"dapp-dev-guide/list-cspr":{"id":"dapp-dev-guide/list-cspr","title":"Listing CSPR on Your Exchange","description":"This topic describes how to list Casper token (CSPR) on a cryptocurrency exchange.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/quickstart":{"id":"dapp-dev-guide/quickstart","title":"Quickstart","description":"Here is a list of commands for developers who already meet the prerequisites and want to quickly send a sample contract to the Testnet. Consult the complete documentation for context and additional help.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/guidance":{"id":"dapp-dev-guide/sdkspec/guidance","title":"Guidance for JSON-RPC SDK Compliance","description":"A compliant Casper JSON-RPC SDK implementation must support all the endpoints and relevant types within the specification. The specification allows everything ranging from a minimal viable implementation to a full implementation, and a given SDK should cite which level of implementation they claim to be compliant with. For example, an SDK claiming to be an informational SDK must have implemented all entry points and relevant types described in the informational JSON-RPC methods page.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/introduction":{"id":"dapp-dev-guide/sdkspec/introduction","title":"Introduction","description":"This document outlines the JSON-RPC API endpoints and types definitions for developers crafting an SDK for use with Casper networks.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/json-rpc-informational":{"id":"dapp-dev-guide/sdkspec/json-rpc-informational","title":"Informational JSON-RPC Methods","description":"informational}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/json-rpc-minimal":{"id":"dapp-dev-guide/sdkspec/json-rpc-minimal","title":"Required Methods for Minimal Compliance","description":"The methods included in this document represent the most basic, fundamental endpoints for a viable and compliant Casper SDK. They allow the user to retrieve the information necessary to interact with a Casper network, as well as the means to interact.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/json-rpc-pos":{"id":"dapp-dev-guide/sdkspec/json-rpc-pos","title":"Proof of Stake JSON-RPC Methods","description":"proof-of-stake}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/json-rpc-transactional":{"id":"dapp-dev-guide/sdkspec/json-rpc-transactional","title":"Transactional JSON-RPC Method","description":"transactional}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/types_chain":{"id":"dapp-dev-guide/sdkspec/types_chain","title":"Types","description":"types}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/types_cl":{"id":"dapp-dev-guide/sdkspec/types_cl","title":"CLType","description":"cltype}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/setup":{"id":"dapp-dev-guide/setup","title":"Development Prerequisites","description":"This section explains how to fulfill the prerequisites needed to interact with a Casper network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter-testnet/commands":{"id":"dapp-dev-guide/tutorials/counter-testnet/commands","title":"Important Commands","description":"State Root Hash","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter-testnet/index":{"id":"dapp-dev-guide/tutorials/counter-testnet/index","title":"Introduction","description":"This tutorial installs a simple counter contract on the Casper Testnet. The contract is straightforward and simply maintains a counter variable. If you want to learn to send deploys to a local Casper Network, you can follow a similar tutorial and work with NCTL. Once you are familiar with this process, the next step will be to write more practical smart contracts.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter-testnet/overview":{"id":"dapp-dev-guide/tutorials/counter-testnet/overview","title":"Overview","description":"This flowchart outlines the process we will go through in this tutorial. Since there are quite a few things taking place, you must keep in mind the overall flow as you proceed through the tutorial on your own.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter-testnet/walkthrough":{"id":"dapp-dev-guide/tutorials/counter-testnet/walkthrough","title":"Tutorial Walkthrough","description":"Now that we are familiar with the basic commands, we can begin the tutorial to deploy a contract application and use it on the network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/commands":{"id":"dapp-dev-guide/tutorials/counter/commands","title":"Important Commands","description":"Faucet Account Information","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/index":{"id":"dapp-dev-guide/tutorials/counter/index","title":"Introduction","description":"This tutorial installs a simple counter contract on a local Casper Network with NCTL. The contract is straightforward and simply maintains a counter variable. If you want to learn to send deploys to the Testnet, you can follow a similar tutorial. Once you are familiar with this process, the next step will be to write more practical smart contracts.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/overview":{"id":"dapp-dev-guide/tutorials/counter/overview","title":"Overview","description":"This flowchart outlines the process we will go through in this tutorial. Since there are quite a few things taking place, you must keep in mind the overall flow as you proceed through the tutorial on your own.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/walkthrough":{"id":"dapp-dev-guide/tutorials/counter/walkthrough","title":"Tutorial Walkthrough","description":"Now that we are familiar with the basic commands, we can begin the tutorial to deploy a contract application and use it on the network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/getting-started-tutorial":{"id":"dapp-dev-guide/tutorials/getting-started-tutorial","title":"Getting Started Video","description":"This video guide is a step-by-step tutorial for setting up your Casper development environment and a sample project. You can follow along and also consult the corresponding Getting Started documentation.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/index":{"id":"dapp-dev-guide/tutorials/index","title":"Introduction","description":"The following tutorials present several Casper features in depth:","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/kv-storage-tutorial":{"id":"dapp-dev-guide/tutorials/kv-storage-tutorial","title":"Key-Value Storage Tutorial","description":"This tutorial covers a simple contract, which creates a key that stores a CLType value. This example will show you how to store a U64, string, account hash, or U512 value."},"dapp-dev-guide/tutorials/multi-sig/additional":{"id":"dapp-dev-guide/tutorials/multi-sig/additional","title":"Additional Scenarios","description":"This section walks you through additional scenarios where accounts have multiple associated keys for signing transactions at various thresholds."},"dapp-dev-guide/tutorials/multi-sig/client":{"id":"dapp-dev-guide/tutorials/multi-sig/client","title":"Client Example","description":"\x3c!-- TODO refresh the tutorial, but keep the content for now. Commenting it out so it doesn\'t show up in the search."},"dapp-dev-guide/tutorials/multi-sig/concepts":{"id":"dapp-dev-guide/tutorials/multi-sig/concepts","title":"Concepts","description":"The Casper implementation of multiple signatures is unique and allows you to set up and customize access to your account and deployments."},"dapp-dev-guide/tutorials/multi-sig/contract":{"id":"dapp-dev-guide/tutorials/multi-sig/contract","title":"Contract Example","description":"This section covers an example smart contract used for key management."},"dapp-dev-guide/tutorials/multi-sig/example":{"id":"dapp-dev-guide/tutorials/multi-sig/example","title":"Setting up a Multi-sig Account","description":"\x3c!-- TODO refresh the tutorial, but keep the content in the repository. Commenting it out so it doesn\'t show up in the search results."},"dapp-dev-guide/tutorials/multi-sig/index":{"id":"dapp-dev-guide/tutorials/multi-sig/index","title":"Introduction","description":"See the Two-Party Multi-Signature workflow."},"dapp-dev-guide/tutorials/return-values-tutorial":{"id":"dapp-dev-guide/tutorials/return-values-tutorial","title":"Interacting with Runtime Return Values","description":"Users interacting with a Casper network must keep in mind the differences between session and contract code. Session code executes entirely within the context of the initiating account, while contract code executes within the context of its own state. Any action undertaken by a contract must initiate through an outside call, usually via session code.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/transfer-token-to-contract":{"id":"dapp-dev-guide/tutorials/transfer-token-to-contract","title":"Safely Transfer Tokens to a Contract","description":"This tutorial covers two methods to handle tokens via a contract. This is not a native process to a Casper network and will require the use of custom code. The following two scenarios provide a framework for developers and the pros and cons of each example. Developers should choose the option that best suits their individual needs.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/upgrade-contract":{"id":"dapp-dev-guide/tutorials/upgrade-contract","title":"Upgrading a Contract","description":"This tutorial examines how to upgrade an existing contract, a process similar to upgrading any other software. You can change an unlocked contract package by adding a new contract and updating the default contract version that the contract package should use. You will need to know the contract package hash and use the addcontractversion API.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/understanding-hash-types":{"id":"dapp-dev-guide/understanding-hash-types","title":"Understanding Hash Types","description":"For the sake of user convenience and compatibility, we expect the delivery of hashes and similar data in the form of a prefixed string when using the node. The following is a list of string representations used.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/assembly-script":{"id":"dapp-dev-guide/writing-contracts/assembly-script","title":"Getting Started with AssemblyScript","description":"Casper Labs maintains the casper-contract to allow developers to create smart contracts using AssemblyScript. The package source is hosted in the main Casper Network repository.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/best-practices":{"id":"dapp-dev-guide/writing-contracts/best-practices","title":"Best Practices for Casper Smart Contract Authors","description":"At its core, the Casper platform is software, and best practices for general software development will apply. However, there are specific variables and situations that should be considered when developing for a Casper network. For example, a smart contract installed on global state cannot access file systems or open a connection to external resources.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/calling-contracts":{"id":"dapp-dev-guide/writing-contracts/calling-contracts","title":"Calling Smart Contracts with the Rust Client","description":"Smart contracts exist as stored on-chain logic, allowing disparate users to call the included entry points. This tutorial covers different ways to call Casper contracts with the Casper command-line client and the put-deploy command. Each section below includes a short video demonstrating some example output.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/contract-vs-session":{"id":"dapp-dev-guide/writing-contracts/contract-vs-session","title":"Contracts and Session Code","description":"What is Session Code?","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/dictionaries":{"id":"dapp-dev-guide/writing-contracts/dictionaries","title":"Reading and Writing to Dictionaries","description":"In a Casper network, you can now store sets of data under Keys. Previously, URefs were the exclusive means by which users could store data in global state. To maintain persistent access to these URefs, they would have to be stored within an Account or Contract context. In the case of Contracts, sustained and continuous use of URefs would result in the expansion of the associated NamedKeys structures.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/execution-error-codes":{"id":"dapp-dev-guide/writing-contracts/execution-error-codes","title":"Execution Error Codes","description":"This section covers smart contract execution error codes.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/getting-started":{"id":"dapp-dev-guide/writing-contracts/getting-started","title":"Getting Started with Rust","description":"This guide covers the basic tools you will need to set up your first Casper smart contract. You will also be able to build a sample smart contract and run a few basic tests on it on your local machine.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/index":{"id":"dapp-dev-guide/writing-contracts/index","title":"Introduction","description":"This section shows you how to write session code and smart contracts in Rust and WebAssembly (Wasm) for a Casper network. When referring to session code, these documents outline logic that executes in the context of an account. In contrast, smart contracts consist of logic installed on-chain, for use by multiple parties. There is a large overlap between the processes of writing session code versus contract code, with some semantic differences outlined in their respective documentation. The Video Series for Writing On-Chain Code accompanies the topics below.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/installing-contracts":{"id":"dapp-dev-guide/writing-contracts/installing-contracts","title":"Installing Smart Contracts and Querying Global State","description":"This tutorial is a continuation of the Smart Contracts on Casper guide, and covers the installation of Casper contracts using the Casper command-line client and the put-deploy command.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/rust-contracts":{"id":"dapp-dev-guide/writing-contracts/rust-contracts","title":"Writing a Basic Smart Contract in Rust","description":"What is a Smart Contract?","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/session-code":{"id":"dapp-dev-guide/writing-contracts/session-code","title":"Writing Session Code","description":"This section explains how to write session code. To review the definition of session code and the differences between session code and contract code, see Comparing Session Code and Contract Code. Session code can be written in any programming language that compiles to Wasm. However, the examples in this topic use Rust.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/testing-contracts":{"id":"dapp-dev-guide/writing-contracts/testing-contracts","title":"Testing Smart Contracts","description":"Introduction","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/testing-session-code":{"id":"dapp-dev-guide/writing-contracts/testing-session-code","title":"Testing Session Code","description":"This section describes how to test session code using the Casper unit-testing framework. The writing session code section is a prerequisite for this tutorial, which uses the example code described here.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/upgrading-contracts":{"id":"dapp-dev-guide/writing-contracts/upgrading-contracts","title":"Upgrading and Maintaining Smart Contracts","description":"Our smart contract packaging tools enable you to:","sidebar":"dapp-dev-guide"},"design/casper-design":{"id":"design/casper-design","title":"Overview of a Casper Network","description":"Introduction","sidebar":"design"},"design/highway":{"id":"design/highway","title":"The Highway Consensus Protocol","description":"What is Consensus?","sidebar":"design"},"design/index":{"id":"design/index","title":"Introduction","description":"-   Network Communication","sidebar":"design"},"design/p2p":{"id":"design/p2p","title":"Network Communication","description":"communications-head}","sidebar":"design"},"design/reading-and-writing-to-the-blockchain":{"id":"design/reading-and-writing-to-the-blockchain","title":"Reading and Writing Data to the Blockchain","description":"Casper features several means of reading and writing data to global state, depending on user needs and complexity. Reading data from global state can be done off-chain or on-chain. Writing data requires on-chain interactions, due to the nature of the system.","sidebar":"design"},"design/serialization-standard":{"id":"design/serialization-standard","title":"Serialization Standard","description":"serialization-standard-head}","sidebar":"design"},"disclaimer":{"id":"disclaimer","title":"disclaimer","description":"Disclaimer"},"economics/concepts":{"id":"economics/concepts","title":"Staking Concepts","description":"The Casper network is a Proof-of-Stake blockchain that allows validators to stake the Casper native token CSPR on the network. Validators receive CSPR as an incentive for continuing to maintain and secure the network. CSPR rewards are distributed as blocks are validated into existence and organized into eras.","sidebar":"economics"},"economics/consensus":{"id":"economics/consensus","title":"Consensus Economics","description":"Highway consensus is a continuous, trust-less process where a fixed set of validators engage in scheduled communication to advance the linear chain of finalized blocks, representing the history of changes to the global state of the blockchain. The fixed set of validators may change at each era boundary. The economics of this layer revolve around validator selection and incentivization of participation according to the schedule.","sidebar":"economics"},"economics/delegation":{"id":"economics/delegation","title":"Delegation Details","description":"This section provides a detailed explanation of the delegation cost mechanism, how the gas cost relates with delegations, where to find the details etc. Please note that the cost amounts are likely to change with time and you may have to check the latest release details to get the most up-to-date and accurate details.","sidebar":"economics"},"economics/gas-concepts":{"id":"economics/gas-concepts","title":"Gas and the Casper Blockchain","description":"What is gas?","sidebar":"economics"},"economics/index":{"id":"economics/index","title":"Overview","description":"This page presents an overview of the Casper economics.","sidebar":"economics"},"economics/runtime":{"id":"economics/runtime","title":"Introduction","description":"The economics of the runtime layer should incentivize efficient allocation of computational resources, primarily CPU time, to users. Pending state pruning implementation, disk space use is treated as CPU time usage and charged, irreversibly, per byte written. Currently, gas is allocated according to a first-in, first-out model for deploys, with a fixed price of 1 mote (1/109 part of a CSPR token) per 1 unit of gas.","sidebar":"economics"},"faq/faq-developer":{"id":"faq/faq-developer","title":"FAQ - Developers","description":"This section covers frequently asked questions and our recommendations from the developer\'s perspective.","sidebar":"faq"},"faq/faq-enterpise":{"id":"faq/faq-enterpise","title":"FAQ - Enterprise","description":"Frequently asked questions regarding the Casper Network, Casper Labs, and the CSPR token sale.","sidebar":"faq"},"faq/faq-general":{"id":"faq/faq-general","title":"FAQ - General","description":"Accounts","sidebar":"faq"},"faq/faq-validator":{"id":"faq/faq-validator","title":"FAQ - Validators","description":"Node Operations","sidebar":"faq"},"faq/index":{"id":"faq/index","title":"Frequently Asked Questions (FAQ)","description":"This page consolidates several frequently asked questions (FAQ) and organizes them into specific categories with links to access the full content of those FAQ sections.","sidebar":"faq"},"glossary/A":{"id":"glossary/A","title":"A","description":"---","sidebar":"glossary"},"glossary/B":{"id":"glossary/B","title":"B","description":"---","sidebar":"glossary"},"glossary/C":{"id":"glossary/C","title":"C","description":"---","sidebar":"glossary"},"glossary/D":{"id":"glossary/D","title":"D","description":"---","sidebar":"glossary"},"glossary/E":{"id":"glossary/E","title":"E","description":"---","sidebar":"glossary"},"glossary/F":{"id":"glossary/F","title":"F","description":"---","sidebar":"glossary"},"glossary/G":{"id":"glossary/G","title":"G","description":"---","sidebar":"glossary"},"glossary/H":{"id":"glossary/H","title":"H","description":"---","sidebar":"glossary"},"glossary/I":{"id":"glossary/I","title":"I","description":"---","sidebar":"glossary"},"glossary/index":{"id":"glossary/index","title":"Appendix","description":"These definitions are correct in the context of the Casper Labs. They may (and probably will) have slightly different semantics in other contexts, including other blockchain contexts.","sidebar":"glossary"},"glossary/J":{"id":"glossary/J","title":"J","description":"---","sidebar":"glossary"},"glossary/K":{"id":"glossary/K","title":"K","description":"---","sidebar":"glossary"},"glossary/L":{"id":"glossary/L","title":"L","description":"---","sidebar":"glossary"},"glossary/M":{"id":"glossary/M","title":"M","description":"---","sidebar":"glossary"},"glossary/N":{"id":"glossary/N","title":"N","description":"---","sidebar":"glossary"},"glossary/O":{"id":"glossary/O","title":"O","description":"---","sidebar":"glossary"},"glossary/P":{"id":"glossary/P","title":"P","description":"---","sidebar":"glossary"},"glossary/Q":{"id":"glossary/Q","title":"Q","description":"---","sidebar":"glossary"},"glossary/R":{"id":"glossary/R","title":"R","description":"---","sidebar":"glossary"},"glossary/S":{"id":"glossary/S","title":"S","description":"---","sidebar":"glossary"},"glossary/T":{"id":"glossary/T","title":"T","description":"---","sidebar":"glossary"},"glossary/U":{"id":"glossary/U","title":"U","description":"---","sidebar":"glossary"},"glossary/V":{"id":"glossary/V","title":"V","description":"---","sidebar":"glossary"},"glossary/W":{"id":"glossary/W","title":"W","description":"---","sidebar":"glossary"},"glossary/X":{"id":"glossary/X","title":"X","description":"---","sidebar":"glossary"},"glossary/Y":{"id":"glossary/Y","title":"Y","description":"---","sidebar":"glossary"},"glossary/Z":{"id":"glossary/Z","title":"Z","description":"---","sidebar":"glossary"},"operators/bonding":{"id":"operators/bonding","title":"Bonding as a Validator","description":"It is recommended that a bonding request be sent once the node has completed the synchronization process. In a Casper network, bonding takes place through the auction contract via the add_bid.wasm contract. The auction runs for a future era, every era. The chainspec.toml specifies the number of slots available, and the auction will take the top N slots and create the validator set for the future era.","sidebar":"operators"},"operators/create":{"id":"operators/create","title":"Setting up a Network","description":"It is possible to create a new network or join an existing network. This page outlines the basics for creating a new network.","sidebar":"operators"},"operators/fast-sync":{"id":"operators/fast-sync","title":"Introducing Fast-sync","description":"The Casper Network is a smart contract platform. It requires new nodes to download and execute each and every block to join the network. Starting from genesis (start of the Mainnet), the node executes each deploy in every block. This process continues until the node has arrived at the current state of the blockchain. This process to sync a node with the blockchain can take a very long time."},"operators/hardware":{"id":"operators/hardware","title":"Recommended Hardware Specifications","description":"System Requirements","sidebar":"operators"},"operators/index":{"id":"operators/index","title":"Introduction","description":"Operators who wish to run node infrastructure on a Casper network, either as a standalone private network, or as part of the public network should explore this section.","sidebar":"operators"},"operators/install-node":{"id":"operators/install-node","title":"Installing a Node","description":"Ensure the requirements listed in the following sections are met before you start setting up the node on the network, either on Mainnet or Testnet.","sidebar":"operators"},"operators/joining":{"id":"operators/joining","title":"Joining a Running Network","description":"Each Casper network is permissionless, enabling new validators to join the network and provide additional security to the system. This page outlines the sequence of recommended steps to spin up a validating node and join an existing network.","sidebar":"operators"},"operators/setup":{"id":"operators/setup","title":"Basic Node Configuration","description":"This page outlines the processes and files involved in setting up a Casper node. For step-by-step node installation instructions, follow the Node Setup guide.","sidebar":"operators"},"operators/unbonding":{"id":"operators/unbonding","title":"Unbonding as a Validator","description":"Once a bid is placed, it will remain in the state of the auction contract, even if the bid fails to win a slot immediately. This is because new slots may become available if bonded validators leave the network or reduce their bond amounts. Therefore, a bid must be explicitly withdrawn to remove it from the auction. Bonded validators also have a bid in the auction; to unbond stake, this bid must be reduced. Since tokens will be transferred out of the bid purse, it\'s essential to compile the contract to withdraw the bid yourself so there is confidence in the correctness of the contract. The process is essentially the same as bonding but uses a different contract, withdraw_bid.wasm.","sidebar":"operators"},"operators/upgrade":{"id":"operators/upgrade","title":"Upgrading the Node","description":"The chainspec.toml contains a section to indicate from which era the given casper-node version should start running.","sidebar":"operators"},"staking/index":{"id":"staking/index","title":"Overview","description":"This page describes key concepts related to the staking process.","sidebar":"staking"},"welcome":{"id":"welcome","title":"Welcome","description":"This article provides an overview of the Casper project."},"workflow/developers/delegate":{"id":"workflow/developers/delegate","title":"Delegating with the Casper Client","description":"This document details a workflow where an account holder on a Casper network can delegate tokens to a validator.","sidebar":"workflow"},"workflow/developers/deploy-transfer":{"id":"workflow/developers/deploy-transfer","title":"Transferring Tokens using a Multi-sig Deploy","description":"This topic explores using a deploy file to transfer Casper tokens (CSPR) between purses on a Casper network. This method of transferring tokens is recommended when you want to implement multi-signature deploys. The make-transfer command allows you to create a transfer Deploy and save the output to a file. You can then have the Deploy signed by other parties using the sign-deploy command and send it to the network for execution using the send-deploy command.","sidebar":"workflow"},"workflow/developers/index":{"id":"workflow/developers/index","title":"Table of Contents","description":"These developer guides highlight key features and capabilities of the Casper blockchain.","sidebar":"workflow"},"workflow/developers/querying":{"id":"workflow/developers/querying","title":"Querying a Casper Network","description":"The Casper node supports queries for users and developers to obtain information stored on the blockchain.","sidebar":"workflow"},"workflow/developers/transfer-workflow":{"id":"workflow/developers/transfer-workflow","title":"Direct Token Transfer","description":"This workflow describes how to use the Casper command-line client to transfer tokens between purses on a Casper network.","sidebar":"workflow"},"workflow/developers/transfers":{"id":"workflow/developers/transfers","title":"Introduction","description":"The following topics describe how to use the Casper command-line client to transfer tokens between purses on a Casper network. Depending on the type of accounts, you can choose a direct transfer or a multiple-signature (multi-sig) deploy transfer.","sidebar":"workflow"},"workflow/developers/two-party-multi-sig":{"id":"workflow/developers/two-party-multi-sig","title":"Two-Party Multi-Signature Deploys","description":"Accounts on a Casper network can associate other accounts to allow or require a multiple-signature scheme for deploys.","sidebar":"workflow"},"workflow/developers/undelegate":{"id":"workflow/developers/undelegate","title":"Undelegating Tokens with the Casper Client","description":"This document details a workflow where tokens delegated to a validator on a Casper network can be undelegated.","sidebar":"workflow"},"workflow/developers/verify-transfer":{"id":"workflow/developers/verify-transfer","title":"Verifying a Transfer","description":"Prerequisite","sidebar":"workflow"},"workflow/index":{"id":"workflow/index","title":"How To\'s","description":"Users","sidebar":"workflow"},"workflow/operators/index":{"id":"workflow/operators/index","title":"Table of Contents","description":"-   Set Up a Private Casper Network: a step-by-step guide to establishing and configuring a private Casper network","sidebar":"workflow"},"workflow/operators/setup-private-network":{"id":"workflow/operators/setup-private-network","title":"Set Up a Private Casper Network","description":"Casper private networks operate in a similar way to the Casper public network. The significant difference in private networks is a closed validator set and having administrator account(s) which can control regular accounts. Hence, there are specific configurations when setting up the genesis block and administrator accounts. Besides the main configuration options that the Casper platform provides, each customer may add other configuration options when setting up a private network.","sidebar":"workflow"},"workflow/operators/staging-files-for-new-network":{"id":"workflow/operators/staging-files-for-new-network","title":"Staging Files for a New Network","description":"Staging files is not needed for already established running networks.","sidebar":"workflow"},"workflow/users/block-explorer":{"id":"workflow/users/block-explorer","title":"Block Explorers on Casper Network","description":"The Casper blockchain is available as the Mainnet and Testnet. The Mainnet is the Casper blockchain that utilizes Casper tokens (CSPR). The Testnet is an alternate Casper blockchain used to test applications without spending CSPR tokens on the Casper Mainnet. You can use block explorers such as cspr.live and Casper.info to explore the Casper blockchain.","sidebar":"workflow"},"workflow/users/delegate-ui":{"id":"workflow/users/delegate-ui","title":"Delegating Tokens with a Block Explorer","description":"Introduction","sidebar":"workflow"},"workflow/users/funding-from-exchanges":{"id":"workflow/users/funding-from-exchanges","title":"Funding Mainnet Accounts from an Exchange","description":"To send CSPR tokens from an exchange to a Mainnet account, you need the Mainnet account\'s public key. Then, you can set up a withdrawal request from the exchange using this public key. The transfer will take a few minutes.","sidebar":"workflow"},"workflow/users/index":{"id":"workflow/users/index","title":"Table of Contents","description":"These user guides contain step-by-step instructions for interacting with the Casper blockchain.","sidebar":"workflow"},"workflow/users/ledger-setup":{"id":"workflow/users/ledger-setup","title":"Ledger Setup","description":"A Ledger Device is a hardware wallet that is considered one of the most secure ways to store your digital assets. Ledger uses an offline, or cold storage, method of generating private keys, making it a preferred method for many crypto users. This guide will help you connect your Ledger device to a Casper account using the cspr.live block explorer to send and receive CSPR tokens.","sidebar":"workflow"},"workflow/users/staking-ledger":{"id":"workflow/users/staking-ledger","title":"Delegating with Ledger Devices","description":"Ledger Initialization"},"workflow/users/testnet-faucet":{"id":"workflow/users/testnet-faucet","title":"Funding Testnet Accounts","description":"The Casper Testnet is an alternate Casper blockchain that enables testing applications without spending CSPR on the Mainnet. The Testnet is deployed independently from the Mainnet for users to experiment with network features such as transferring, delegating, and undelegating tokens. One way to access the Casper Testnet is to use the cspr.live block explorer.","sidebar":"workflow"},"workflow/users/token-transfer":{"id":"workflow/users/token-transfer","title":"Transferring Tokens using a Block Explorer","description":"You can transfer Casper tokens (CSPR) using any block explorer built to explore the Casper blockchain. The Wallet feature on these block explorers can be used to transfer tokens to another user\'s purse, delegate stake, or undelegate stake. In this section, we will discuss the steps to transfer CSPR tokens.","sidebar":"workflow"},"workflow/users/undelegate-ui":{"id":"workflow/users/undelegate-ui","title":"Undelegating with a Block Explorer","description":"If you want to undelegate tokens from a validator, you can do so at any time. Note that undelegation costs approximately 0.5 CSPR.","sidebar":"workflow"}}}')}}]);