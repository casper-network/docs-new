"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9669],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(r),m=o,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9661:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],c={title:"Introduction",slug:"/counter"},u="A Counter on an NCTL Network",l={unversionedId:"resources/beginner/counter/index",id:"resources/beginner/counter/index",title:"Introduction",description:"This tutorial installs a simple counter contract on a local Casper network with NCTL. The contract is straightforward and simply maintains a counter variable. If you want to learn to send deploys to the Testnet, you can follow a similar tutorial. Once you are familiar with this process, the next step would be to write more practical smart contracts.",source:"@site/source/docs/casper/resources/beginner/counter/index.md",sourceDirName:"resources/beginner/counter",slug:"/counter",permalink:"/counter",draft:!1,editUrl:"https://github.com/casper-network/docs-new/tree/dev-new/source/docs/casper/resources/beginner/counter/index.md",tags:[],version:"current",lastUpdatedAt:1690377311,formattedLastUpdatedAt:"Jul 26, 2023",frontMatter:{title:"Introduction",slug:"/counter"},sidebar:"resources",previous:{title:"Getting Started",permalink:"/resources/beginner/getting-started-tutorial"},next:{title:"Overview",permalink:"/resources/beginner/counter/overview"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2}],d={toc:p},m="wrapper";function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"a-counter-on-an-nctl-network"},"A Counter on an NCTL Network"),(0,a.kt)("p",null,"This tutorial installs a simple counter contract on a local Casper network with NCTL. The contract is straightforward and simply maintains a counter variable. If you want to learn to send deploys to the Testnet, you can follow a ",(0,a.kt)("a",{parentName:"p",href:"/counter-testnet"},"similar tutorial"),". Once you are familiar with this process, the next step would be to write more practical smart contracts."),(0,a.kt)("p",null,"Here is how the tutorial is structured:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/resources/beginner/counter/overview"},"Tutorial Overview")," - Introduction to the process and what will be covered"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/resources/beginner/counter/commands"},"Casper-Client Commands")," - A summary of all relevant commands and respective arguments"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/resources/beginner/counter/walkthrough"},"Tutorial Walkthrough")," - Step-by-step tutorial instructions")),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You have completed the ",(0,a.kt)("a",{parentName:"li",href:"/developers/writing-onchain-code/getting-started"},"Getting Started tutorial")," to set up your development environment, including tools like ",(0,a.kt)("em",{parentName:"li"},"cmake")," (version 3.1.4+), ",(0,a.kt)("em",{parentName:"li"},"cargo"),", and ",(0,a.kt)("em",{parentName:"li"},"Rust"),"."),(0,a.kt)("li",{parentName:"ol"},"You have completed the ",(0,a.kt)("a",{parentName:"li",href:"/developers/dapps/setup-nctl"},"NCTL tutorial"),", which introduces you to the CLI tool to set up and control local Casper networks for development."),(0,a.kt)("li",{parentName:"ol"},"You have installed the ",(0,a.kt)("a",{parentName:"li",href:"/developers/prerequisites#the-casper-command-line-client"},"Casper client")," to send deploys to the chain.")))}f.isMDXComponent=!0}}]);