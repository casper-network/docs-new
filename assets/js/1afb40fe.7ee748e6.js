"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[870],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return b}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),i=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},s=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=i(a),u=r,b=p["".concat(c,".").concat(u)]||p[u]||f[u]||l;return a?n.createElement(b,d(d({ref:t},s),{},{components:a})):n.createElement(b,d({ref:t},s))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,d=new Array(l);d[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,d[1]=o;for(var i=2;i<l;i++)d[i]=a[i];return n.createElement.apply(null,d)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},309:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p}});var n=a(3117),r=a(102),l=(a(7294),a(3905)),d=["components"],o={},c="Informational JSON-RPC Methods",i={unversionedId:"developers/json-rpc/json-rpc-informational",id:"developers/json-rpc/json-rpc-informational",title:"Informational JSON-RPC Methods",description:"informational}",source:"@site/source/docs/casper/developers/json-rpc/json-rpc-informational.md",sourceDirName:"developers/json-rpc",slug:"/developers/json-rpc/json-rpc-informational",permalink:"/developers/json-rpc/json-rpc-informational",draft:!1,editUrl:"https://github.com/casper-network/docs/tree/main/source/docs/casper/developers/json-rpc/json-rpc-informational.md",tags:[],version:"current",lastUpdatedAt:1680109217,formattedLastUpdatedAt:"Mar 29, 2023",frontMatter:{},sidebar:"developers",previous:{title:"Transactional JSON-RPC Method",permalink:"/developers/json-rpc/json-rpc-transactional"},next:{title:"Proof of Stake JSON-RPC Methods",permalink:"/developers/json-rpc/json-rpc-pos"}},s={},p=[{value:"chain_get_block",id:"chain-get-block",level:2},{value:"<code>chain_get_block_result</code>",id:"chain_get_block_result",level:3},{value:"chain_get_block_transfers",id:"chain-get-block-transfers",level:2},{value:"<code>chain_get_block_transfers_result</code>",id:"chain_get_block_transfers_result",level:3},{value:"chain_get_state_root_hash",id:"chain-get-state-root-hash",level:2},{value:"<code>chain_get_state_root_hash_result</code>",id:"chain_get_state_root_hash_result",level:3},{value:"info_get_deploy",id:"info-get-deploy",level:2},{value:"<code>info_get_deploy_result</code>",id:"info_get_deploy_result",level:3},{value:"query_global_state",id:"query-global-state",level:2},{value:"<code>query_global_state_result</code>",id:"query_global_state_result",level:3},{value:"state_get_account_info",id:"state-get-account-info",level:2},{value:"<code>state_get_account_info_result</code>",id:"state_get_account_info_result",level:3},{value:"state_get_balance",id:"state-get-balance",level:2},{value:"<code>state_get_balance_result</code>",id:"state_get_balance_result",level:3},{value:"state_get_dictionary_item",id:"state-get-dictionary-item",level:2},{value:"info_get_peers",id:"info-get-peers",level:2},{value:"<code>info_get_peers_result</code>",id:"info_get_peers_result",level:3},{value:"info_get_status",id:"info-get-status",level:2},{value:"<code>info_get_status_result</code>",id:"info_get_status_result",level:3}],f={toc:p},u="wrapper";function b(e){var t=e.components,a=(0,r.Z)(e,d);return(0,l.kt)(u,(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"informational"},"Informational JSON-RPC Methods"),(0,l.kt)("p",null,"The following methods return information from a node on a Casper network. The response should be identical, regardless of the node queried, as the information in question is objective and common to all nodes within a network."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"chain-get-block"},"chain_get_block"),(0,l.kt)("p",null,"This method returns the JSON representation of a ",(0,l.kt)("a",{parentName:"p",href:"/concepts/design/casper-design#block-structure-head"},"Block")," from the network."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#blockidentifier"},"block_identifier")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block hash or the Block height.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example chain_get_block request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "chain_get_block",\n  "params": [\n    {\n      "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n    }\n  ]\n}\n\n'))),(0,l.kt)("h3",{id:"chain_get_block_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"chain_get_block_result")),(0,l.kt)("p",null,"The result from ",(0,l.kt)("inlineCode",{parentName:"p"},"chain_get_block")," depends on block availability from a given node. If ",(0,l.kt)("inlineCode",{parentName:"p"},"chain_get_block")," returns an error message that the node does not have information on the given block, you may attempt to get the information from a different node."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#jsonblock"},"block")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block, if found. (Not required)")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example chain_get_block result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "block": {\n      "body": {\n        "deploy_hashes": [],\n        "proposer": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n        "transfer_hashes": [\n          "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa"\n        ]\n      },\n      "hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n      "header": {\n        "accumulated_seed": "ac979f51525cfd979b14aa7dc0737c5154eabe0db9280eceaa8dc8d2905b20d5",\n        "body_hash": "cd502c5393a3c8b66d6979ad7857507c9baf5a8ba16ba99c28378d3a970fff42",\n        "era_end": {\n          "era_report": {\n            "equivocators": [\n              "013b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29"\n            ],\n            "inactive_validators": [\n              "018139770ea87d175f56a35466c34c7ecccb8d8a91b4ee37a25df60f5b8fc9b394"\n            ],\n            "rewards": [\n              {\n                "amount": 1000,\n                "validator": "018a88e3dd7409f195fd52db2d3cba5d72ca6709bf1d94121bf3748801b40f6f5c"\n              }\n            ]\n          },\n          "next_era_validator_weights": [\n            {\n              "validator": "016e7a1cdd29b0b78fd13af4c5598feff4ef2a97166e3ca6f2e4fbfccd80505bf1",\n              "weight": "456"\n            },\n            {\n              "validator": "018a875fff1eb38451577acd5afee405456568dd7c89e090863a0557bc7af49f17",\n              "weight": "789"\n            },\n            {\n              "validator": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n              "weight": "123"\n            }\n          ]\n        },\n        "era_id": 1,\n        "height": 10,\n        "parent_hash": "0707070707070707070707070707070707070707070707070707070707070707",\n        "protocol_version": "1.0.0",\n        "random_bit": true,\n        "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n        "timestamp": "2020-11-17T00:39:24.072Z"\n      },\n      "proofs": [\n        {\n          "public_key": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n          "signature": "016291a7b2689e2edcc6e79030be50edd02f9bd7d809921ae2654012f808c7b9a0f125bc32d6aa610cbd012395a9832ccfaa9262023339f1db71ca073a13bb9707"\n        }\n      ]\n    }\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"chain-get-block-transfers"},"chain_get_block_transfers"),(0,l.kt)("p",null,"This method returns all native transfers within a given ",(0,l.kt)("a",{parentName:"p",href:"/concepts/design/casper-design#block-structure-head"},"Block")," from a network."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#blockidentifier"},"block_identifier")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block hash.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example chain_get_block_transfers request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "chain_get_block_transfers",\n  "params": [\n    {\n      "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n    }\n  ]\n}\n\n'))),(0,l.kt)("h3",{id:"chain_get_block_transfers_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"chain_get_block_transfers_result")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#blockhash"},"block_hash")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block hash, if found.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#transfer"},"transfers")),(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block's transfers, if found.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example chain_get_block_transfers result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "block_hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n    "transfers": [\n      {\n        "amount": "0",\n        "deploy_hash": "0000000000000000000000000000000000000000000000000000000000000000",\n        "from": "account-hash-0000000000000000000000000000000000000000000000000000000000000000",\n        "gas": "0",\n        "id": null,\n        "source": "uref-0000000000000000000000000000000000000000000000000000000000000000-000",\n        "target": "uref-0000000000000000000000000000000000000000000000000000000000000000-000",\n        "to": null\n      }\n    ]\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"chain-get-state-root-hash"},"chain_get_state_root_hash"),(0,l.kt)("p",null,"This method returns a state root hash at a given ",(0,l.kt)("a",{parentName:"p",href:"/concepts/design/casper-design#block-structure-head"},"Block"),". If you do not specify a ",(0,l.kt)("inlineCode",{parentName:"p"},"block_identifier"),", you will receive the highest state root hash."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#blockidentifier"},"block_identifier")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block hash. (Optional)")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example chain_get_state_root_hash request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "chain_get_state_root_hash",\n  "params": [\n    {\n      "Height": 10\n    }\n  ]\n}\n\n'))),(0,l.kt)("h3",{id:"chain_get_state_root_hash_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"chain_get_state_root_hash_result")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#digest"},"state_root_hash")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Hex-encoded hash of the state root.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example chain_get_state_root_hash result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808"\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"info-get-deploy"},"info_get_deploy"),(0,l.kt)("p",null,"This method retrieves a ",(0,l.kt)("a",{parentName:"p",href:"/concepts/design/casper-design#execution-semantics-deploys"},"Deploy")," from a network. It requires a ",(0,l.kt)("inlineCode",{parentName:"p"},"deploy_hash")," to query the Deploy."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#deployhash"},"deploy_hash")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The Deploy hash.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#finalizedapprovals"},"finalized_approvals")),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Determines whether to return the Deploy with the finalized approvals substituted. (Optional)")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example info_get_deploy request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "info_get_deploy",\n  "params": [\n    "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa",\n    true\n  ]\n}\n\n'))),(0,l.kt)("h3",{id:"info_get_deploy_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"info_get_deploy_result")),(0,l.kt)("p",null,"The response contains the Deploy and the results of executing the Deploy."),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"execution_results")," field is empty, it means that the network processed the ",(0,l.kt)("inlineCode",{parentName:"p"},"Deploy"),", but has yet to execute it. If the network executed the ",(0,l.kt)("inlineCode",{parentName:"p"},"Deploy"),", it will return the results of the execution. The execution results contain the Block hash which contains the Deploy."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#deploy"},"deploy")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Deploy.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#jsonexecutionresult"},"execution_results")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The map of Block hash to execution result.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example info_get_deploy result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "deploy": {\n      "approvals": [\n        {\n          "signature": "014c1a89f92e29dd74fc648f741137d9caf4edba97c5f9799ce0c9aa6b0c9b58db368c64098603dbecef645774c05dff057cb1f91f2cf390bbacce78aa6f084007",\n          "signer": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c"\n        }\n      ],\n      "hash": "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa",\n      "header": {\n        "account": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n        "body_hash": "d53cf72d17278fd47d399013ca389c50d589352f1a12593c0b8e01872a641b50",\n        "chain_name": "casper-example",\n        "dependencies": [\n          "0101010101010101010101010101010101010101010101010101010101010101"\n        ],\n        "gas_price": 1,\n        "timestamp": "2020-11-17T00:39:24.072Z",\n        "ttl": "1h"\n      },\n      "payment": {\n        "StoredContractByName": {\n          "args": [\n            [\n              "amount",\n              {\n                "bytes": "e8030000",\n                "cl_type": "I32",\n                "parsed": 1000\n              }\n            ]\n          ],\n          "entry_point": "example-entry-point",\n          "name": "casper-example"\n        }\n      },\n      "session": {\n        "Transfer": {\n          "args": [\n            [\n              "amount",\n              {\n                "bytes": "e8030000",\n                "cl_type": "I32",\n                "parsed": 1000\n              }\n            ]\n          ]\n        }\n      }\n    },\n    "execution_results": [\n      {\n        "block_hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n        "result": {\n          "Success": {\n            "cost": "123456",\n            "effect": {\n              "operations": [\n                {\n                  "key": "account-hash-2c4a11c062a8a337bfc97e27fd66291caeb2c65865dcb5d3ef3759c4c97efecb",\n                  "kind": "Write"\n                },\n                {\n                  "key": "deploy-af684263911154d26fa05be9963171802801a0b6aff8f199b7391eacb8edc9e1",\n                  "kind": "Read"\n                }\n              ],\n              "transforms": [\n                {\n                  "key": "uref-2c4a11c062a8a337bfc97e27fd66291caeb2c65865dcb5d3ef3759c4c97efecb-007",\n                  "transform": {\n                    "AddUInt64": 8\n                  }\n                },\n                {\n                  "key": "deploy-af684263911154d26fa05be9963171802801a0b6aff8f199b7391eacb8edc9e1",\n                  "transform": "Identity"\n                }\n              ]\n            },\n            "transfers": [\n              "transfer-5959595959595959595959595959595959595959595959595959595959595959",\n              "transfer-8282828282828282828282828282828282828282828282828282828282828282"\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"query-global-state"},"query_global_state"),(0,l.kt)("p",null,"This method allows for you to query for a value stored under certain keys in global state. You may query using either a ",(0,l.kt)("a",{parentName:"p",href:"/concepts/design/casper-design#block_hash"},"Block hash")," or state root hash."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Note: Querying a purse's balance requires the use of ",(0,l.kt)("inlineCode",{parentName:"li"},"state_get_balance")," rather than any iteration of ",(0,l.kt)("inlineCode",{parentName:"li"},"query_global_state"),".")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#globalstateidentifier"},"state_identifier")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The identifier used for the query.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"casper_types::Key")," as a formatted string.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The path components starting from the key as base.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example query_global_state request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "query_global_state",\n  "params": [\n    "deploy-af684263911154d26fa05be9963171802801a0b6aff8f199b7391eacb8edc9e1",\n    [],\n    {\n      "BlockHash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n    }\n  ]\n}\n\n'))),(0,l.kt)("h3",{id:"query_global_state_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"query_global_state_result")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#jsonblockheader"},"block_header")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block header if a Block hash was provided. (Not required)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#storedvalue"},"stored_value")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The stored value.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#merkle-proof"},"merkle_proof")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The merkle proof.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example query_global_state result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "block_header": {\n      "accumulated_seed": "ac979f51525cfd979b14aa7dc0737c5154eabe0db9280eceaa8dc8d2905b20d5",\n      "body_hash": "cd502c5393a3c8b66d6979ad7857507c9baf5a8ba16ba99c28378d3a970fff42",\n      "era_end": {\n        "era_report": {\n          "equivocators": [\n            "013b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29"\n          ],\n          "inactive_validators": [\n            "018139770ea87d175f56a35466c34c7ecccb8d8a91b4ee37a25df60f5b8fc9b394"\n          ],\n          "rewards": [\n            {\n              "amount": 1000,\n              "validator": "018a88e3dd7409f195fd52db2d3cba5d72ca6709bf1d94121bf3748801b40f6f5c"\n            }\n          ]\n        },\n        "next_era_validator_weights": [\n          {\n            "validator": "016e7a1cdd29b0b78fd13af4c5598feff4ef2a97166e3ca6f2e4fbfccd80505bf1",\n            "weight": "456"\n          },\n          {\n            "validator": "018a875fff1eb38451577acd5afee405456568dd7c89e090863a0557bc7af49f17",\n            "weight": "789"\n          },\n          {\n            "validator": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n            "weight": "123"\n          }\n        ]\n      },\n      "era_id": 1,\n      "height": 10,\n      "parent_hash": "0707070707070707070707070707070707070707070707070707070707070707",\n      "protocol_version": "1.0.0",\n      "random_bit": true,\n      "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n      "timestamp": "2020-11-17T00:39:24.072Z"\n    },\n    "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3",\n    "stored_value": {\n      "Account": {\n        "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n        "action_thresholds": {\n          "deployment": 1,\n          "key_management": 1\n        },\n        "associated_keys": [\n          {\n            "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n            "weight": 1\n          }\n        ],\n        "main_purse": "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007",\n        "named_keys": []\n      }\n    }\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"state-get-account-info"},"state_get_account_info"),(0,l.kt)("p",null,"This method returns a JSON representation of an ",(0,l.kt)("a",{parentName:"p",href:"/concepts/design/casper-design#accounts-head"},"Account")," from the network. The ",(0,l.kt)("inlineCode",{parentName:"p"},"block_identifier")," must refer to a Block after the Account's creation, or the method will return an empty response."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#publickey"},"public_key")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The public key of the Account.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#blockidentifier"},"block_identifier")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Block identifier.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example state_get_account_info request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "state_get_account_info",\n  "params": [\n    {\n      "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n    },\n    "013b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29"\n  ]\n}\n\n'))),(0,l.kt)("h3",{id:"state_get_account_info_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"state_get_account_info_result")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#account"},"account")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"A JSON representation of the Account structure.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#merkleproof"},"merkle_proof")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The merkle proof.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example state_get_account_info result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "account": {\n      "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n      "action_thresholds": {\n        "deployment": 1,\n        "key_management": 1\n      },\n      "associated_keys": [\n        {\n          "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n          "weight": 1\n        }\n      ],\n      "main_purse": "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007",\n      "named_keys": []\n    },\n    "api_version": "1.4.13",\n    "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"state-get-balance"},"state_get_balance"),(0,l.kt)("p",null,"This method returns a purse's balance from a network. The request takes in the formatted representation of a purse URef as a parameter."),(0,l.kt)("p",null,"To query for the balance of an Account, you must provide the formatted representation of the Account's main purse URef, which can be obtained from the ",(0,l.kt)("a",{parentName:"p",href:"#stategetaccountinfo-state-get-account-info"},(0,l.kt)("inlineCode",{parentName:"a"},"state_get_account_info"))," response. The response contains the balance of a purse in motes."),(0,l.kt)("p",null,"For instance, one native layer-1 token of the Casper Mainnet ",(0,l.kt)("a",{parentName:"p",href:"/concepts/glossary/C#cspr"},"CSPR")," is comprised of 1,000,000,000 motes. On a different Casper network, the representation of token-to-motes may differ."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#digest"},"state_root_hash")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of state root.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"purse_uref"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Formatted URef.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example state_get_balance request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "state_get_balance",\n  "params": [\n    "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007",\n    "0808080808080808080808080808080808080808080808080808080808080808"\n  ]\n}\n\n'))),(0,l.kt)("h3",{id:"state_get_balance_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"state_get_balance_result")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#u512"},"balance_value")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The balance value in motes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#merkle-proof"},"merkle_proof")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The merkle proof.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example state_get_balance result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "balance_value": "123456",\n    "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"state-get-dictionary-item"},"state_get_dictionary_item"),(0,l.kt)("p",null,"This method returns an item from a Dictionary. Every dictionary has a seed URef, findable by using a ",(0,l.kt)("inlineCode",{parentName:"p"},"dictionary_identifier"),". The address of a stored value is the blake2b hash of the seed URef and the byte representation of the dictionary key."),(0,l.kt)("p",null,"You may query a stored value directly using the dictionary address."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#digest"},"state_root_hash")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Hash of the state root.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#dictionaryidentifier"},"dictionary_identifier")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The Dictionary query identifier.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example state_get_dictionary_item request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "state_get_dictionary_item",\n  "params": [\n    {\n      "URef": {\n        "dictionary_item_key": "a_unique_entry_identifier",\n        "seed_uref": "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007"\n      }\n    },\n    "0808080808080808080808080808080808080808080808080808080808080808"\n  ]\n}\n\n'))),"### `state_get_dictionary_item_result`",(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dictionary_key"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The key under which the value is stored.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#storedvalue"},"stored_value")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The stored value.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#merkle-proof"},"merkle_proof")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The merkle proof.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example state_get_dictionary_item result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "dictionary_key": "dictionary-67518854aa916c97d4e53df8570c8217ccc259da2721b692102d76acd0ee8d1f",\n    "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3",\n    "stored_value": {\n      "CLValue": {\n        "bytes": "0100000000000000",\n        "cl_type": "U64",\n        "parsed": 1\n      }\n    }\n  }\n}\n\n'))),(0,l.kt)("hr",null),(0,l.kt)("h1",{id:"node-informational"},"Node Informational JSON-RPC Methods"),(0,l.kt)("p",null,"The following methods return information from a node on a Casper network. The responses return information specific to the queried node, and as such, will vary."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"info-get-peers"},"info_get_peers"),(0,l.kt)("p",null,"This method returns a list of peers connected to the node."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example info_get_peers request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "info_get_peers",\n  "params": []\n}\n\n'))),(0,l.kt)("h3",{id:"info_get_peers_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"info_get_peers_result")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#peersmap"},"peers")),(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The node ID and network address of each connected peer.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example info_get_peers result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "peers": [\n      {\n        "address": "127.0.0.1:54321",\n        "node_id": "tls:0101..0101"\n      }\n    ]\n  }\n}\n\n'))),(0,l.kt)("h2",{id:"info-get-status"},"info_get_status"),(0,l.kt)("p",null,"This method returns the current status of a node."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example info_get_status request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "info_get_status",\n  "params": []\n}\n\n'))),(0,l.kt)("h3",{id:"info_get_status_result"},(0,l.kt)("inlineCode",{parentName:"h3"},"info_get_status_result")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"api_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The RPC API version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"build_version"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The compiled node version.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"chainspec_name"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The chainspec name, used to identify the currently connected network.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#minimalblockinfo"},"last_added_block_info")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The minimal info of the last Block from the linear chain.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#nextupgrade"},"next_upgrade")),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"Information about the next scheduled upgrade.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#publickey"},"our_public_signing_key")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Our public signing key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#peersmap"},"peers")),(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The node ID and network address of each connected peer.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#timediff"},"round_length")),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},"The next round length if this node is a validator. A round length is the amount of time it takes to reach consensus on proposing a Block.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#digest"},"starting_state_root_hash")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The state root hash used at the start of the current session.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/developers/json-rpc/types_chain#timediff"},"uptime")),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},"Time that passed since the node has started.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Example info_get_status result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\n{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "api_version": "1.4.13",\n    "build_version": "1.4.13-c8db6a737-casper-mainnet",\n    "chainspec_name": "casper-example",\n    "last_added_block_info": {\n      "creator": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n      "era_id": 1,\n      "hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n      "height": 10,\n      "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n      "timestamp": "2020-11-17T00:39:24.072Z"\n    },\n    "next_upgrade": {\n      "activation_point": 42,\n      "protocol_version": "2.0.1"\n    },\n    "our_public_signing_key": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n    "peers": [\n      {\n        "address": "127.0.0.1:54321",\n        "node_id": "tls:0101..0101"\n      }\n    ],\n    "round_length": "1m 5s 536ms",\n    "starting_state_root_hash": "0202020202020202020202020202020202020202020202020202020202020202",\n    "uptime": "13s"\n  }\n}\n\n'))))}b.isMDXComponent=!0}}]);